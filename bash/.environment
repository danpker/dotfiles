# Add some color
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export EDITOR=nvim
alias ls='ls -GFh'

# Colors
black="\[$(tput setaf 0)\]"
red="\[$(tput setaf 1)\]"
green="\[$(tput setaf 2)\]"
yellow="\[$(tput setaf 3)\]"
blue="\[$(tput setaf 4)\]"
magenta="\[$(tput setaf 5)\]"
cyan="\[$(tput setaf 6)\]"
white="\[$(tput setaf 7)\]"

# Title bar - "user@host: ~"
title="\u@\h: \w"
titlebar="\[\033]0;"$title"\007\]"

# Clear attributes
clear_attributes="\[$(tput sgr0)\]"

# MacOS stuff
export PATH="/usr/local/sbin:$PATH"
export PATH="${HOME}/.cargo/bin:$PATH"
export PATH="/usr/bin:$PATH"
export PATH="/usr/sbin:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export LIBRARY_PATH="$LIBRARY_PATH:/usr/local/lib"

# Custom bash prompt - "âžœ  ~ (master) "
export PS1="${titlebar}${orange}> ${blue}\W ${cyan}\$(git_branch)${clear_attributes}"

# don't put duplicate lines or lines starting with space in the  history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# append to the history
export HISTSIZE=1000
export HISTFILESIZE=200000

export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS='
--color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
--color info:108,prompt:109,spinner:108,pointer:168,marker:168
'
export DOTNET_CLI_TELEMETRY_OPTOUT=1

# USe brew version of open ssl headers
OPENSSL_PREFIX="$(brew --prefix openssl)"
export OPENSSL_INCLUDE_DIR="${OPENSSL_PREFIX}/include"
export OPENSSL_LIB_DIR="${OPENSSL_PREFIX}/lib"

if [ -x "$(command -v rustc)" ]; then
    export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
fi

# Put this in a function because it's sloooooooow and i don't use node that often
nvminit() {
    export NVM_DIR="$HOME/.nvm"

    if [ -s "$NVM_DIR/nvm.sh" ]; then
        . "$NVM_DIR/nvm.sh" --no-use # This loads nvm
    fi

    if [ -s "$NVM_DIR/bash_completion" ]; then
            . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    fi
}
